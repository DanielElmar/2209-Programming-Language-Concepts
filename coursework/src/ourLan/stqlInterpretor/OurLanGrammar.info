-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from OurLanGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseOurLan -> Ops                          (0)
	Ops -> Var                                         (1)
	Ops -> Data                                        (2)
	Data -> Triplet                                    (3)
	Data -> Data '.' Data                              (4)
	Data -> replace Data with Template Template Template   (5)
	Data -> file fileName                              (6)
	Data -> var                                        (7)
	Data -> Data where Pred                            (8)
	Pred -> Pred1 and Pred                             (9)
	Pred -> not Pred                                   (10)
	Pred -> Pred1 or Pred                              (11)
	Pred -> Pred1                                      (12)
	Pred1 -> Filter Filter Filter                      (13)
	Filter -> star                                     (14)
	Filter -> '==' ComponentList                       (15)
	Filter -> Op Type                                  (16)
	ComponentList -> TypeList                          (17)
	ComponentList -> Extract                           (18)
	TypeList -> TypeList ',' Type                      (19)
	TypeList -> Type                                   (20)
	Extract -> subj Data                               (21)
	Extract -> pred Data                               (22)
	Extract -> obj Data                                (23)
	Op -> '=='                                         (24)
	Op -> gt                                           (25)
	Op -> lt                                           (26)
	Template -> star                                   (27)
	Template -> Type                                   (28)
	Type -> iri                                        (29)
	Type -> str                                        (30)
	Type -> '-' int                                    (31)
	Type -> int                                        (32)
	Type -> true                                       (33)
	Type -> false                                      (34)
	Triplet -> '<' Type '>' '<' Type '>' '<' Type '>'   (35)
	Var -> var '=' Data                                (36)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	replace        { TokenReplace p }
	with           { TokenWith p }
	file           { TokenFile p }
	where          { TokenWhere p }
	fileName       { TokenFileName p $$ }
	'.'            { TokenDot p }
	','            { TokenComma p }
	'-'            { TokenNeg p }
	gt             { TokenGreaterThan p }
	lt             { TokenLessThan p }
	'=='           { TokenEqual p }
	'='            { TokenVarEqual p }
	var            { TokenVar p $$ }
	and            { TokenAnd p }
	or             { TokenOr p }
	not            { TokenNot p }
	int            { TokenInt p $$ }
	str            { TokenString p $$ }
	star           { TokenStar p }
	true           { TokenTrue p }
	false          { TokenFalse p }
	iri            { TokenIRI p $$ }
	subj           { TokenSubj p }
	pred           { TokenPred p }
	obj            { TokenObj p }
	'>'            { TokenAngleBracketClose p }
	'<'            { TokenAngleBracketOpen p }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseOurLan rule  0
	Ops             rules 1, 2
	Data            rules 3, 4, 5, 6, 7, 8
	Pred            rules 9, 10, 11, 12
	Pred1           rule  13
	Filter          rules 14, 15, 16
	ComponentList   rules 17, 18
	TypeList        rules 19, 20
	Extract         rules 21, 22, 23
	Op              rules 24, 25, 26
	Template        rules 27, 28
	Type            rules 29, 30, 31, 32, 33, 34
	Triplet         rule  35
	Var             rule  36

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseOurLan -> . Ops                         (rule 0)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 9
	'<'            shift, and enter state 10

	Ops            goto state 4
	Data           goto state 5
	Triplet        goto state 6
	Var            goto state 2

State 1

	Ops -> . Var                                        (rule 1)

	var            shift, and enter state 3

	Var            goto state 2

State 2

	Ops -> Var .                                        (rule 1)

	%eof           reduce using rule 1


State 3

	Var -> var . '=' Data                               (rule 36)

	'='            shift, and enter state 18


State 4

	%start_parseOurLan -> Ops .                         (rule 0)

	%eof           accept


State 5

	Ops -> Data .                                       (rule 2)
	Data -> Data . '.' Data                             (rule 4)
	Data -> Data . where Pred                           (rule 8)

	where          shift, and enter state 22
	'.'            shift, and enter state 23
	%eof           reduce using rule 2


State 6

	Data -> Triplet .                                   (rule 3)

	with           reduce using rule 3
	where          reduce using rule 3
	'.'            reduce using rule 3
	gt             reduce using rule 3
	lt             reduce using rule 3
	'=='           reduce using rule 3
	and            reduce using rule 3
	or             reduce using rule 3
	star           reduce using rule 3
	%eof           reduce using rule 3


State 7

	Data -> replace . Data with Template Template Template    (rule 5)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 21
	'<'            shift, and enter state 10

	Data           goto state 20
	Triplet        goto state 6

State 8

	Data -> file . fileName                             (rule 6)

	fileName       shift, and enter state 19


State 9

	Data -> var .                                       (rule 7)
	Var -> var . '=' Data                               (rule 36)

	where          reduce using rule 7
	'.'            reduce using rule 7
	'='            shift, and enter state 18
	%eof           reduce using rule 7


State 10

	Triplet -> '<' . Type '>' '<' Type '>' '<' Type '>'    (rule 35)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Type           goto state 11

State 11

	Triplet -> '<' Type . '>' '<' Type '>' '<' Type '>'    (rule 35)

	'>'            shift, and enter state 37


State 12

	Type -> '-' . int                                   (rule 31)

	int            shift, and enter state 36


State 13

	Type -> int .                                       (rule 32)

	with           reduce using rule 32
	where          reduce using rule 32
	'.'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	gt             reduce using rule 32
	lt             reduce using rule 32
	'=='           reduce using rule 32
	and            reduce using rule 32
	or             reduce using rule 32
	int            reduce using rule 32
	str            reduce using rule 32
	star           reduce using rule 32
	true           reduce using rule 32
	false          reduce using rule 32
	iri            reduce using rule 32
	'>'            reduce using rule 32
	%eof           reduce using rule 32


State 14

	Type -> str .                                       (rule 30)

	with           reduce using rule 30
	where          reduce using rule 30
	'.'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	gt             reduce using rule 30
	lt             reduce using rule 30
	'=='           reduce using rule 30
	and            reduce using rule 30
	or             reduce using rule 30
	int            reduce using rule 30
	str            reduce using rule 30
	star           reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	iri            reduce using rule 30
	'>'            reduce using rule 30
	%eof           reduce using rule 30


State 15

	Type -> true .                                      (rule 33)

	with           reduce using rule 33
	where          reduce using rule 33
	'.'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	gt             reduce using rule 33
	lt             reduce using rule 33
	'=='           reduce using rule 33
	and            reduce using rule 33
	or             reduce using rule 33
	int            reduce using rule 33
	str            reduce using rule 33
	star           reduce using rule 33
	true           reduce using rule 33
	false          reduce using rule 33
	iri            reduce using rule 33
	'>'            reduce using rule 33
	%eof           reduce using rule 33


State 16

	Type -> false .                                     (rule 34)

	with           reduce using rule 34
	where          reduce using rule 34
	'.'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	gt             reduce using rule 34
	lt             reduce using rule 34
	'=='           reduce using rule 34
	and            reduce using rule 34
	or             reduce using rule 34
	int            reduce using rule 34
	str            reduce using rule 34
	star           reduce using rule 34
	true           reduce using rule 34
	false          reduce using rule 34
	iri            reduce using rule 34
	'>'            reduce using rule 34
	%eof           reduce using rule 34


State 17

	Type -> iri .                                       (rule 29)

	with           reduce using rule 29
	where          reduce using rule 29
	'.'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	gt             reduce using rule 29
	lt             reduce using rule 29
	'=='           reduce using rule 29
	and            reduce using rule 29
	or             reduce using rule 29
	int            reduce using rule 29
	str            reduce using rule 29
	star           reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	iri            reduce using rule 29
	'>'            reduce using rule 29
	%eof           reduce using rule 29


State 18

	Var -> var '=' . Data                               (rule 36)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 21
	'<'            shift, and enter state 10

	Data           goto state 35
	Triplet        goto state 6

State 19

	Data -> file fileName .                             (rule 6)

	with           reduce using rule 6
	where          reduce using rule 6
	'.'            reduce using rule 6
	gt             reduce using rule 6
	lt             reduce using rule 6
	'=='           reduce using rule 6
	and            reduce using rule 6
	or             reduce using rule 6
	star           reduce using rule 6
	%eof           reduce using rule 6


State 20

	Data -> Data . '.' Data                             (rule 4)
	Data -> replace Data . with Template Template Template    (rule 5)
	Data -> Data . where Pred                           (rule 8)

	with           shift, and enter state 34
	where          shift, and enter state 22
	'.'            shift, and enter state 23


State 21

	Data -> var .                                       (rule 7)

	with           reduce using rule 7
	where          reduce using rule 7
	'.'            reduce using rule 7
	gt             reduce using rule 7
	lt             reduce using rule 7
	'=='           reduce using rule 7
	and            reduce using rule 7
	or             reduce using rule 7
	star           reduce using rule 7
	%eof           reduce using rule 7


State 22

	Data -> Data where . Pred                           (rule 8)

	gt             shift, and enter state 29
	lt             shift, and enter state 30
	'=='           shift, and enter state 31
	not            shift, and enter state 32
	star           shift, and enter state 33

	Pred           goto state 25
	Pred1          goto state 26
	Filter         goto state 27
	Op             goto state 28

State 23

	Data -> Data '.' . Data                             (rule 4)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 21
	'<'            shift, and enter state 10

	Data           goto state 24
	Triplet        goto state 6

State 24

	Data -> Data . '.' Data                             (rule 4)
	Data -> Data '.' Data .                             (rule 4)
	Data -> Data . where Pred                           (rule 8)

	with           reduce using rule 4
	where          reduce using rule 4
	'.'            reduce using rule 4
	gt             reduce using rule 4
	lt             reduce using rule 4
	'=='           reduce using rule 4
	and            reduce using rule 4
	or             reduce using rule 4
	star           reduce using rule 4
	%eof           reduce using rule 4


State 25

	Data -> Data where Pred .                           (rule 8)

	with           reduce using rule 8
	where          reduce using rule 8
	'.'            reduce using rule 8
	gt             reduce using rule 8
	lt             reduce using rule 8
	'=='           reduce using rule 8
	and            reduce using rule 8
	or             reduce using rule 8
	star           reduce using rule 8
	%eof           reduce using rule 8


State 26

	Pred -> Pred1 . and Pred                            (rule 9)
	Pred -> Pred1 . or Pred                             (rule 11)
	Pred -> Pred1 .                                     (rule 12)

	with           reduce using rule 12
	where          reduce using rule 12
	'.'            reduce using rule 12
	gt             reduce using rule 12
	lt             reduce using rule 12
	'=='           reduce using rule 12
	and            shift, and enter state 52
	or             shift, and enter state 53
	star           reduce using rule 12
	%eof           reduce using rule 12


State 27

	Pred1 -> Filter . Filter Filter                     (rule 13)

	gt             shift, and enter state 29
	lt             shift, and enter state 30
	'=='           shift, and enter state 31
	star           shift, and enter state 33

	Filter         goto state 51
	Op             goto state 28

State 28

	Filter -> Op . Type                                 (rule 16)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Type           goto state 50

State 29

	Op -> gt .                                          (rule 25)

	'-'            reduce using rule 25
	int            reduce using rule 25
	str            reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	iri            reduce using rule 25


State 30

	Op -> lt .                                          (rule 26)

	'-'            reduce using rule 26
	int            reduce using rule 26
	str            reduce using rule 26
	true           reduce using rule 26
	false          reduce using rule 26
	iri            reduce using rule 26


State 31

	Filter -> '==' . ComponentList                      (rule 15)
	Op -> '==' .                                        (rule 24)

	'-'            reduce using rule 24
	int            reduce using rule 24
	str            reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	iri            reduce using rule 24
	subj           shift, and enter state 47
	pred           shift, and enter state 48
	obj            shift, and enter state 49

	ComponentList  goto state 43
	TypeList       goto state 44
	Extract        goto state 45
	Type           goto state 46

State 32

	Pred -> not . Pred                                  (rule 10)

	gt             shift, and enter state 29
	lt             shift, and enter state 30
	'=='           shift, and enter state 31
	not            shift, and enter state 32
	star           shift, and enter state 33

	Pred           goto state 42
	Pred1          goto state 26
	Filter         goto state 27
	Op             goto state 28

State 33

	Filter -> star .                                    (rule 14)

	with           reduce using rule 14
	where          reduce using rule 14
	'.'            reduce using rule 14
	gt             reduce using rule 14
	lt             reduce using rule 14
	'=='           reduce using rule 14
	and            reduce using rule 14
	or             reduce using rule 14
	star           reduce using rule 14
	%eof           reduce using rule 14


State 34

	Data -> replace Data with . Template Template Template    (rule 5)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	star           shift, and enter state 41
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Template       goto state 39
	Type           goto state 40

State 35

	Data -> Data . '.' Data                             (rule 4)
	Data -> Data . where Pred                           (rule 8)
	Var -> var '=' Data .                               (rule 36)

	where          shift, and enter state 22
	'.'            shift, and enter state 23
	%eof           reduce using rule 36


State 36

	Type -> '-' int .                                   (rule 31)

	with           reduce using rule 31
	where          reduce using rule 31
	'.'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	gt             reduce using rule 31
	lt             reduce using rule 31
	'=='           reduce using rule 31
	and            reduce using rule 31
	or             reduce using rule 31
	int            reduce using rule 31
	str            reduce using rule 31
	star           reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	iri            reduce using rule 31
	'>'            reduce using rule 31
	%eof           reduce using rule 31


State 37

	Triplet -> '<' Type '>' . '<' Type '>' '<' Type '>'    (rule 35)

	'<'            shift, and enter state 38


State 38

	Triplet -> '<' Type '>' '<' . Type '>' '<' Type '>'    (rule 35)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Type           goto state 62

State 39

	Data -> replace Data with Template . Template Template    (rule 5)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	star           shift, and enter state 41
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Template       goto state 61
	Type           goto state 40

State 40

	Template -> Type .                                  (rule 28)

	with           reduce using rule 28
	where          reduce using rule 28
	'.'            reduce using rule 28
	'-'            reduce using rule 28
	gt             reduce using rule 28
	lt             reduce using rule 28
	'=='           reduce using rule 28
	and            reduce using rule 28
	or             reduce using rule 28
	int            reduce using rule 28
	str            reduce using rule 28
	star           reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	iri            reduce using rule 28
	%eof           reduce using rule 28


State 41

	Template -> star .                                  (rule 27)

	with           reduce using rule 27
	where          reduce using rule 27
	'.'            reduce using rule 27
	'-'            reduce using rule 27
	gt             reduce using rule 27
	lt             reduce using rule 27
	'=='           reduce using rule 27
	and            reduce using rule 27
	or             reduce using rule 27
	int            reduce using rule 27
	str            reduce using rule 27
	star           reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	iri            reduce using rule 27
	%eof           reduce using rule 27


State 42

	Pred -> not Pred .                                  (rule 10)

	with           reduce using rule 10
	where          reduce using rule 10
	'.'            reduce using rule 10
	gt             reduce using rule 10
	lt             reduce using rule 10
	'=='           reduce using rule 10
	and            reduce using rule 10
	or             reduce using rule 10
	star           reduce using rule 10
	%eof           reduce using rule 10


State 43

	Filter -> '==' ComponentList .                      (rule 15)

	with           reduce using rule 15
	where          reduce using rule 15
	'.'            reduce using rule 15
	gt             reduce using rule 15
	lt             reduce using rule 15
	'=='           reduce using rule 15
	and            reduce using rule 15
	or             reduce using rule 15
	star           reduce using rule 15
	%eof           reduce using rule 15


State 44

	ComponentList -> TypeList .                         (rule 17)
	TypeList -> TypeList . ',' Type                     (rule 19)

	with           reduce using rule 17
	where          reduce using rule 17
	'.'            reduce using rule 17
	','            shift, and enter state 60
	gt             reduce using rule 17
	lt             reduce using rule 17
	'=='           reduce using rule 17
	and            reduce using rule 17
	or             reduce using rule 17
	star           reduce using rule 17
	%eof           reduce using rule 17


State 45

	ComponentList -> Extract .                          (rule 18)

	with           reduce using rule 18
	where          reduce using rule 18
	'.'            reduce using rule 18
	gt             reduce using rule 18
	lt             reduce using rule 18
	'=='           reduce using rule 18
	and            reduce using rule 18
	or             reduce using rule 18
	star           reduce using rule 18
	%eof           reduce using rule 18


State 46

	TypeList -> Type .                                  (rule 20)

	with           reduce using rule 20
	where          reduce using rule 20
	'.'            reduce using rule 20
	','            reduce using rule 20
	gt             reduce using rule 20
	lt             reduce using rule 20
	'=='           reduce using rule 20
	and            reduce using rule 20
	or             reduce using rule 20
	star           reduce using rule 20
	%eof           reduce using rule 20


State 47

	Extract -> subj . Data                              (rule 21)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 21
	'<'            shift, and enter state 10

	Data           goto state 59
	Triplet        goto state 6

State 48

	Extract -> pred . Data                              (rule 22)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 21
	'<'            shift, and enter state 10

	Data           goto state 58
	Triplet        goto state 6

State 49

	Extract -> obj . Data                               (rule 23)

	replace        shift, and enter state 7
	file           shift, and enter state 8
	var            shift, and enter state 21
	'<'            shift, and enter state 10

	Data           goto state 57
	Triplet        goto state 6

State 50

	Filter -> Op Type .                                 (rule 16)

	with           reduce using rule 16
	where          reduce using rule 16
	'.'            reduce using rule 16
	gt             reduce using rule 16
	lt             reduce using rule 16
	'=='           reduce using rule 16
	and            reduce using rule 16
	or             reduce using rule 16
	star           reduce using rule 16
	%eof           reduce using rule 16


State 51

	Pred1 -> Filter Filter . Filter                     (rule 13)

	gt             shift, and enter state 29
	lt             shift, and enter state 30
	'=='           shift, and enter state 31
	star           shift, and enter state 33

	Filter         goto state 56
	Op             goto state 28

State 52

	Pred -> Pred1 and . Pred                            (rule 9)

	gt             shift, and enter state 29
	lt             shift, and enter state 30
	'=='           shift, and enter state 31
	not            shift, and enter state 32
	star           shift, and enter state 33

	Pred           goto state 55
	Pred1          goto state 26
	Filter         goto state 27
	Op             goto state 28

State 53

	Pred -> Pred1 or . Pred                             (rule 11)

	gt             shift, and enter state 29
	lt             shift, and enter state 30
	'=='           shift, and enter state 31
	not            shift, and enter state 32
	star           shift, and enter state 33

	Pred           goto state 54
	Pred1          goto state 26
	Filter         goto state 27
	Op             goto state 28

State 54

	Pred -> Pred1 or Pred .                             (rule 11)

	with           reduce using rule 11
	where          reduce using rule 11
	'.'            reduce using rule 11
	gt             reduce using rule 11
	lt             reduce using rule 11
	'=='           reduce using rule 11
	and            reduce using rule 11
	or             reduce using rule 11
	star           reduce using rule 11
	%eof           reduce using rule 11


State 55

	Pred -> Pred1 and Pred .                            (rule 9)

	with           reduce using rule 9
	where          reduce using rule 9
	'.'            reduce using rule 9
	gt             reduce using rule 9
	lt             reduce using rule 9
	'=='           reduce using rule 9
	and            reduce using rule 9
	or             reduce using rule 9
	star           reduce using rule 9
	%eof           reduce using rule 9


State 56

	Pred1 -> Filter Filter Filter .                     (rule 13)

	with           reduce using rule 13
	where          reduce using rule 13
	'.'            reduce using rule 13
	gt             reduce using rule 13
	lt             reduce using rule 13
	'=='           reduce using rule 13
	and            reduce using rule 13
	or             reduce using rule 13
	star           reduce using rule 13
	%eof           reduce using rule 13


State 57

	Data -> Data . '.' Data                             (rule 4)
	Data -> Data . where Pred                           (rule 8)
	Extract -> obj Data .                               (rule 23)

	with           reduce using rule 23
	where          reduce using rule 23
	'.'            shift, and enter state 23
	gt             reduce using rule 23
	lt             reduce using rule 23
	'=='           reduce using rule 23
	and            reduce using rule 23
	or             reduce using rule 23
	star           reduce using rule 23
	%eof           reduce using rule 23


State 58

	Data -> Data . '.' Data                             (rule 4)
	Data -> Data . where Pred                           (rule 8)
	Extract -> pred Data .                              (rule 22)

	with           reduce using rule 22
	where          reduce using rule 22
	'.'            shift, and enter state 23
	gt             reduce using rule 22
	lt             reduce using rule 22
	'=='           reduce using rule 22
	and            reduce using rule 22
	or             reduce using rule 22
	star           reduce using rule 22
	%eof           reduce using rule 22


State 59

	Data -> Data . '.' Data                             (rule 4)
	Data -> Data . where Pred                           (rule 8)
	Extract -> subj Data .                              (rule 21)

	with           reduce using rule 21
	where          reduce using rule 21
	'.'            shift, and enter state 23
	gt             reduce using rule 21
	lt             reduce using rule 21
	'=='           reduce using rule 21
	and            reduce using rule 21
	or             reduce using rule 21
	star           reduce using rule 21
	%eof           reduce using rule 21


State 60

	TypeList -> TypeList ',' . Type                     (rule 19)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Type           goto state 65

State 61

	Data -> replace Data with Template Template . Template    (rule 5)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	star           shift, and enter state 41
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Template       goto state 64
	Type           goto state 40

State 62

	Triplet -> '<' Type '>' '<' Type . '>' '<' Type '>'    (rule 35)

	'>'            shift, and enter state 63


State 63

	Triplet -> '<' Type '>' '<' Type '>' . '<' Type '>'    (rule 35)

	'<'            shift, and enter state 66


State 64

	Data -> replace Data with Template Template Template .    (rule 5)

	with           reduce using rule 5
	where          reduce using rule 5
	'.'            reduce using rule 5
	gt             reduce using rule 5
	lt             reduce using rule 5
	'=='           reduce using rule 5
	and            reduce using rule 5
	or             reduce using rule 5
	star           reduce using rule 5
	%eof           reduce using rule 5


State 65

	TypeList -> TypeList ',' Type .                     (rule 19)

	with           reduce using rule 19
	where          reduce using rule 19
	'.'            reduce using rule 19
	','            reduce using rule 19
	gt             reduce using rule 19
	lt             reduce using rule 19
	'=='           reduce using rule 19
	and            reduce using rule 19
	or             reduce using rule 19
	star           reduce using rule 19
	%eof           reduce using rule 19


State 66

	Triplet -> '<' Type '>' '<' Type '>' '<' . Type '>'    (rule 35)

	'-'            shift, and enter state 12
	int            shift, and enter state 13
	str            shift, and enter state 14
	true           shift, and enter state 15
	false          shift, and enter state 16
	iri            shift, and enter state 17

	Type           goto state 67

State 67

	Triplet -> '<' Type '>' '<' Type '>' '<' Type . '>'    (rule 35)

	'>'            shift, and enter state 68


State 68

	Triplet -> '<' Type '>' '<' Type '>' '<' Type '>' .    (rule 35)

	with           reduce using rule 35
	where          reduce using rule 35
	'.'            reduce using rule 35
	gt             reduce using rule 35
	lt             reduce using rule 35
	'=='           reduce using rule 35
	and            reduce using rule 35
	or             reduce using rule 35
	star           reduce using rule 35
	%eof           reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 37
Number of terminals: 27
Number of non-terminals: 14
Number of states: 69
