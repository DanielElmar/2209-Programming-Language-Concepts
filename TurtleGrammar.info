-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from TurtleGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTurtle -> ComponentsList               (0)
	ComponentsList -> ComponentsList Component         (1)
	ComponentsList -> Component                        (2)
	Component -> StatementSeq                          (3)
	Component -> Directive                             (4)
	Directive -> pref name ':' Iri                     (5)
	Directive -> base Iri                              (6)
	StatementSeq -> Statement '.' StatementSeq         (7)
	StatementSeq -> Statement '.'                      (8)
	StatementSeq -> Statement ';' PList '.'            (9)
	StatementSeq -> Statement ',' OList '.'            (10)
	Statement -> Iri Iri Iri                           (11)
	Statement -> Iri Iri str                           (12)
	Statement -> Iri Iri int                           (13)
	Statement -> Iri Iri true                          (14)
	Statement -> Iri Iri false                         (15)
	PList -> Preds ';' PList                           (16)
	PList -> Preds                                     (17)
	OList -> Objs ',' OList                            (18)
	OList -> Objs                                      (19)
	Preds -> Iri Iri                                   (20)
	Preds -> Iri str                                   (21)
	Preds -> Iri int                                   (22)
	Preds -> Iri true                                  (23)
	Preds -> Iri false                                 (24)
	Objs -> Iri                                        (25)
	Objs -> str                                        (26)
	Objs -> int                                        (27)
	Objs -> true                                       (28)
	Objs -> false                                      (29)
	Iri -> iri                                         (30)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	pref           { PrefixTok _ }
	base           { BaseTok _ }
	iri            { IRITok _ $$ }
	'.'            { EndTriple _ }
	','            { ObjList _ }
	';'            { PredList _ }
	':'            { ColonTok _ }
	true           { TrueTok _ }
	false          { FalseTok _ }
	name           { NameTok _ $$ }
	str            { StringLiteralTok _ $$ }
	int            { IntTok _ $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTurtle rule  0
	ComponentsList  rules 1, 2
	Component       rules 3, 4
	Directive       rules 5, 6
	StatementSeq    rules 7, 8, 9, 10
	Statement       rules 11, 12, 13, 14, 15
	PList           rules 16, 17
	OList           rules 18, 19
	Preds           rules 20, 21, 22, 23, 24
	Objs            rules 25, 26, 27, 28, 29
	Iri             rule  30

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseTurtle -> . ComponentsList              (rule 0)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10

	ComponentsList goto state 11
	Component      goto state 3
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Iri            goto state 7

State 1

	ComponentsList -> . ComponentsList Component        (rule 1)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10

	ComponentsList goto state 2
	Component      goto state 3
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Iri            goto state 7

State 2

	ComponentsList -> ComponentsList . Component        (rule 1)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10

	Component      goto state 12
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Iri            goto state 7

State 3

	ComponentsList -> Component .                       (rule 2)

	pref           reduce using rule 2
	base           reduce using rule 2
	iri            reduce using rule 2
	%eof           reduce using rule 2


State 4

	Component -> Directive .                            (rule 4)

	pref           reduce using rule 4
	base           reduce using rule 4
	iri            reduce using rule 4
	%eof           reduce using rule 4


State 5

	Component -> StatementSeq .                         (rule 3)

	pref           reduce using rule 3
	base           reduce using rule 3
	iri            reduce using rule 3
	%eof           reduce using rule 3


State 6

	StatementSeq -> Statement . '.' StatementSeq        (rule 7)
	StatementSeq -> Statement . '.'                     (rule 8)
	StatementSeq -> Statement . ';' PList '.'           (rule 9)
	StatementSeq -> Statement . ',' OList '.'           (rule 10)

	'.'            shift, and enter state 16
	','            shift, and enter state 17
	';'            shift, and enter state 18


State 7

	Statement -> Iri . Iri Iri                          (rule 11)
	Statement -> Iri . Iri str                          (rule 12)
	Statement -> Iri . Iri int                          (rule 13)
	Statement -> Iri . Iri true                         (rule 14)
	Statement -> Iri . Iri false                        (rule 15)

	iri            shift, and enter state 10

	Iri            goto state 15

State 8

	Directive -> pref . name ':' Iri                    (rule 5)

	name           shift, and enter state 14


State 9

	Directive -> base . Iri                             (rule 6)

	iri            shift, and enter state 10

	Iri            goto state 13

State 10

	Iri -> iri .                                        (rule 30)

	pref           reduce using rule 30
	base           reduce using rule 30
	iri            reduce using rule 30
	'.'            reduce using rule 30
	','            reduce using rule 30
	';'            reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	str            reduce using rule 30
	int            reduce using rule 30
	%eof           reduce using rule 30


State 11

	%start_parseTurtle -> ComponentsList .              (rule 0)
	ComponentsList -> ComponentsList . Component        (rule 1)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10
	%eof           accept

	Component      goto state 12
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Iri            goto state 7

State 12

	ComponentsList -> ComponentsList Component .        (rule 1)

	pref           reduce using rule 1
	base           reduce using rule 1
	iri            reduce using rule 1
	%eof           reduce using rule 1


State 13

	Directive -> base Iri .                             (rule 6)

	pref           reduce using rule 6
	base           reduce using rule 6
	iri            reduce using rule 6
	%eof           reduce using rule 6


State 14

	Directive -> pref name . ':' Iri                    (rule 5)

	':'            shift, and enter state 35


State 15

	Statement -> Iri Iri . Iri                          (rule 11)
	Statement -> Iri Iri . str                          (rule 12)
	Statement -> Iri Iri . int                          (rule 13)
	Statement -> Iri Iri . true                         (rule 14)
	Statement -> Iri Iri . false                        (rule 15)

	iri            shift, and enter state 10
	true           shift, and enter state 31
	false          shift, and enter state 32
	str            shift, and enter state 33
	int            shift, and enter state 34

	Iri            goto state 30

State 16

	StatementSeq -> Statement '.' . StatementSeq        (rule 7)
	StatementSeq -> Statement '.' .                     (rule 8)

	pref           reduce using rule 8
	base           reduce using rule 8
	iri            shift, and enter state 10
	%eof           reduce using rule 8

	StatementSeq   goto state 29
	Statement      goto state 6
	Iri            goto state 7

State 17

	StatementSeq -> Statement ',' . OList '.'           (rule 10)

	iri            shift, and enter state 10
	true           shift, and enter state 25
	false          shift, and enter state 26
	str            shift, and enter state 27
	int            shift, and enter state 28

	OList          goto state 22
	Objs           goto state 23
	Iri            goto state 24

State 18

	StatementSeq -> Statement ';' . PList '.'           (rule 9)

	iri            shift, and enter state 10

	PList          goto state 19
	Preds          goto state 20
	Iri            goto state 21

State 19

	StatementSeq -> Statement ';' PList . '.'           (rule 9)

	'.'            shift, and enter state 45


State 20

	PList -> Preds . ';' PList                          (rule 16)
	PList -> Preds .                                    (rule 17)

	'.'            reduce using rule 17
	';'            shift, and enter state 44


State 21

	Preds -> Iri . Iri                                  (rule 20)
	Preds -> Iri . str                                  (rule 21)
	Preds -> Iri . int                                  (rule 22)
	Preds -> Iri . true                                 (rule 23)
	Preds -> Iri . false                                (rule 24)

	iri            shift, and enter state 10
	true           shift, and enter state 40
	false          shift, and enter state 41
	str            shift, and enter state 42
	int            shift, and enter state 43

	Iri            goto state 39

State 22

	StatementSeq -> Statement ',' OList . '.'           (rule 10)

	'.'            shift, and enter state 38


State 23

	OList -> Objs . ',' OList                           (rule 18)
	OList -> Objs .                                     (rule 19)

	'.'            reduce using rule 19
	','            shift, and enter state 37


State 24

	Objs -> Iri .                                       (rule 25)

	'.'            reduce using rule 25
	','            reduce using rule 25


State 25

	Objs -> true .                                      (rule 28)

	'.'            reduce using rule 28
	','            reduce using rule 28


State 26

	Objs -> false .                                     (rule 29)

	'.'            reduce using rule 29
	','            reduce using rule 29


State 27

	Objs -> str .                                       (rule 26)

	'.'            reduce using rule 26
	','            reduce using rule 26


State 28

	Objs -> int .                                       (rule 27)

	'.'            reduce using rule 27
	','            reduce using rule 27


State 29

	StatementSeq -> Statement '.' StatementSeq .        (rule 7)

	pref           reduce using rule 7
	base           reduce using rule 7
	iri            reduce using rule 7
	%eof           reduce using rule 7


State 30

	Statement -> Iri Iri Iri .                          (rule 11)

	'.'            reduce using rule 11
	','            reduce using rule 11
	';'            reduce using rule 11


State 31

	Statement -> Iri Iri true .                         (rule 14)

	'.'            reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14


State 32

	Statement -> Iri Iri false .                        (rule 15)

	'.'            reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15


State 33

	Statement -> Iri Iri str .                          (rule 12)

	'.'            reduce using rule 12
	','            reduce using rule 12
	';'            reduce using rule 12


State 34

	Statement -> Iri Iri int .                          (rule 13)

	'.'            reduce using rule 13
	','            reduce using rule 13
	';'            reduce using rule 13


State 35

	Directive -> pref name ':' . Iri                    (rule 5)

	iri            shift, and enter state 10

	Iri            goto state 36

State 36

	Directive -> pref name ':' Iri .                    (rule 5)

	pref           reduce using rule 5
	base           reduce using rule 5
	iri            reduce using rule 5
	%eof           reduce using rule 5


State 37

	OList -> Objs ',' . OList                           (rule 18)

	iri            shift, and enter state 10
	true           shift, and enter state 25
	false          shift, and enter state 26
	str            shift, and enter state 27
	int            shift, and enter state 28

	OList          goto state 47
	Objs           goto state 23
	Iri            goto state 24

State 38

	StatementSeq -> Statement ',' OList '.' .           (rule 10)

	pref           reduce using rule 10
	base           reduce using rule 10
	iri            reduce using rule 10
	%eof           reduce using rule 10


State 39

	Preds -> Iri Iri .                                  (rule 20)

	'.'            reduce using rule 20
	';'            reduce using rule 20


State 40

	Preds -> Iri true .                                 (rule 23)

	'.'            reduce using rule 23
	';'            reduce using rule 23


State 41

	Preds -> Iri false .                                (rule 24)

	'.'            reduce using rule 24
	';'            reduce using rule 24


State 42

	Preds -> Iri str .                                  (rule 21)

	'.'            reduce using rule 21
	';'            reduce using rule 21


State 43

	Preds -> Iri int .                                  (rule 22)

	'.'            reduce using rule 22
	';'            reduce using rule 22


State 44

	PList -> Preds ';' . PList                          (rule 16)

	iri            shift, and enter state 10

	PList          goto state 46
	Preds          goto state 20
	Iri            goto state 21

State 45

	StatementSeq -> Statement ';' PList '.' .           (rule 9)

	pref           reduce using rule 9
	base           reduce using rule 9
	iri            reduce using rule 9
	%eof           reduce using rule 9


State 46

	PList -> Preds ';' PList .                          (rule 16)

	'.'            reduce using rule 16


State 47

	OList -> Objs ',' OList .                           (rule 18)

	'.'            reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 31
Number of terminals: 12
Number of non-terminals: 11
Number of states: 48
