-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from TurtleGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTurtle -> ComponentsList               (0)
	ComponentsList -> ComponentsList Component         (1)
	ComponentsList -> Component                        (2)
	Component -> StatementSeq                          (3)
	Component -> Directive '.'                         (4)
	Directive -> pref name ':' Type                    (5)
	Directive -> base Type                             (6)
	StatementSeq -> Statement '.' StatementSeq         (7)
	StatementSeq -> Statement '.'                      (8)
	StatementSeq -> Statement ';' PList '.'            (9)
	StatementSeq -> Statement ',' OList '.'            (10)
	Statement -> Type Type Type                        (11)
	PList -> Preds ';' PList                           (12)
	PList -> Preds                                     (13)
	OList -> Objs ',' OList                            (14)
	OList -> Objs                                      (15)
	Preds -> Type Type                                 (16)
	Objs -> Type                                       (17)
	Type -> iri                                        (18)
	Type -> str                                        (19)
	Type -> pos int                                    (20)
	Type -> neg int                                    (21)
	Type -> int                                        (22)
	Type -> true                                       (23)
	Type -> false                                      (24)
	Type -> name ':' name                              (25)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	pref           { PrefixTok _ }
	base           { BaseTok _ }
	iri            { IRITok _ $$ }
	'.'            { EndTriple _ }
	','            { ObjList _ }
	';'            { PredList _ }
	':'            { ColonTok _ }
	neg            { NegTok _ }
	pos            { PosTok _ }
	true           { TrueTok _ }
	false          { FalseTok _ }
	name           { NameTok _ $$ }
	str            { StringLiteralTok _ $$ }
	int            { IntTok _ $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTurtle rule  0
	ComponentsList  rules 1, 2
	Component       rules 3, 4
	Directive       rules 5, 6
	StatementSeq    rules 7, 8, 9, 10
	Statement       rule  11
	PList           rules 12, 13
	OList           rules 14, 15
	Preds           rule  16
	Objs            rule  17
	Type            rules 18, 19, 20, 21, 22, 23, 24, 25

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseTurtle -> . ComponentsList              (rule 0)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	ComponentsList goto state 18
	Component      goto state 3
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Type           goto state 7

State 1

	ComponentsList -> . ComponentsList Component        (rule 1)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	ComponentsList goto state 2
	Component      goto state 3
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Type           goto state 7

State 2

	ComponentsList -> ComponentsList . Component        (rule 1)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	Component      goto state 19
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Type           goto state 7

State 3

	ComponentsList -> Component .                       (rule 2)

	pref           reduce using rule 2
	base           reduce using rule 2
	iri            reduce using rule 2
	neg            reduce using rule 2
	pos            reduce using rule 2
	true           reduce using rule 2
	false          reduce using rule 2
	name           reduce using rule 2
	str            reduce using rule 2
	int            reduce using rule 2
	%eof           reduce using rule 2


State 4

	Component -> Directive . '.'                        (rule 4)

	'.'            shift, and enter state 29


State 5

	Component -> StatementSeq .                         (rule 3)

	pref           reduce using rule 3
	base           reduce using rule 3
	iri            reduce using rule 3
	neg            reduce using rule 3
	pos            reduce using rule 3
	true           reduce using rule 3
	false          reduce using rule 3
	name           reduce using rule 3
	str            reduce using rule 3
	int            reduce using rule 3
	%eof           reduce using rule 3


State 6

	StatementSeq -> Statement . '.' StatementSeq        (rule 7)
	StatementSeq -> Statement . '.'                     (rule 8)
	StatementSeq -> Statement . ';' PList '.'           (rule 9)
	StatementSeq -> Statement . ',' OList '.'           (rule 10)

	'.'            shift, and enter state 26
	','            shift, and enter state 27
	';'            shift, and enter state 28


State 7

	Statement -> Type . Type Type                       (rule 11)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	Type           goto state 25

State 8

	Directive -> pref . name ':' Type                   (rule 5)

	name           shift, and enter state 24


State 9

	Directive -> base . Type                            (rule 6)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	Type           goto state 23

State 10

	Type -> iri .                                       (rule 18)

	iri            reduce using rule 18
	'.'            reduce using rule 18
	','            reduce using rule 18
	';'            reduce using rule 18
	neg            reduce using rule 18
	pos            reduce using rule 18
	true           reduce using rule 18
	false          reduce using rule 18
	name           reduce using rule 18
	str            reduce using rule 18
	int            reduce using rule 18


State 11

	Type -> neg . int                                   (rule 21)

	int            shift, and enter state 22


State 12

	Type -> pos . int                                   (rule 20)

	int            shift, and enter state 21


State 13

	Type -> true .                                      (rule 23)

	iri            reduce using rule 23
	'.'            reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	neg            reduce using rule 23
	pos            reduce using rule 23
	true           reduce using rule 23
	false          reduce using rule 23
	name           reduce using rule 23
	str            reduce using rule 23
	int            reduce using rule 23


State 14

	Type -> false .                                     (rule 24)

	iri            reduce using rule 24
	'.'            reduce using rule 24
	','            reduce using rule 24
	';'            reduce using rule 24
	neg            reduce using rule 24
	pos            reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	name           reduce using rule 24
	str            reduce using rule 24
	int            reduce using rule 24


State 15

	Type -> name . ':' name                             (rule 25)

	':'            shift, and enter state 20


State 16

	Type -> str .                                       (rule 19)

	iri            reduce using rule 19
	'.'            reduce using rule 19
	','            reduce using rule 19
	';'            reduce using rule 19
	neg            reduce using rule 19
	pos            reduce using rule 19
	true           reduce using rule 19
	false          reduce using rule 19
	name           reduce using rule 19
	str            reduce using rule 19
	int            reduce using rule 19


State 17

	Type -> int .                                       (rule 22)

	iri            reduce using rule 22
	'.'            reduce using rule 22
	','            reduce using rule 22
	';'            reduce using rule 22
	neg            reduce using rule 22
	pos            reduce using rule 22
	true           reduce using rule 22
	false          reduce using rule 22
	name           reduce using rule 22
	str            reduce using rule 22
	int            reduce using rule 22


State 18

	%start_parseTurtle -> ComponentsList .              (rule 0)
	ComponentsList -> ComponentsList . Component        (rule 1)

	pref           shift, and enter state 8
	base           shift, and enter state 9
	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17
	%eof           accept

	Component      goto state 19
	Directive      goto state 4
	StatementSeq   goto state 5
	Statement      goto state 6
	Type           goto state 7

State 19

	ComponentsList -> ComponentsList Component .        (rule 1)

	pref           reduce using rule 1
	base           reduce using rule 1
	iri            reduce using rule 1
	neg            reduce using rule 1
	pos            reduce using rule 1
	true           reduce using rule 1
	false          reduce using rule 1
	name           reduce using rule 1
	str            reduce using rule 1
	int            reduce using rule 1
	%eof           reduce using rule 1


State 20

	Type -> name ':' . name                             (rule 25)

	name           shift, and enter state 39


State 21

	Type -> pos int .                                   (rule 20)

	iri            reduce using rule 20
	'.'            reduce using rule 20
	','            reduce using rule 20
	';'            reduce using rule 20
	neg            reduce using rule 20
	pos            reduce using rule 20
	true           reduce using rule 20
	false          reduce using rule 20
	name           reduce using rule 20
	str            reduce using rule 20
	int            reduce using rule 20


State 22

	Type -> neg int .                                   (rule 21)

	iri            reduce using rule 21
	'.'            reduce using rule 21
	','            reduce using rule 21
	';'            reduce using rule 21
	neg            reduce using rule 21
	pos            reduce using rule 21
	true           reduce using rule 21
	false          reduce using rule 21
	name           reduce using rule 21
	str            reduce using rule 21
	int            reduce using rule 21


State 23

	Directive -> base Type .                            (rule 6)

	'.'            reduce using rule 6


State 24

	Directive -> pref name . ':' Type                   (rule 5)

	':'            shift, and enter state 38


State 25

	Statement -> Type Type . Type                       (rule 11)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	Type           goto state 37

State 26

	StatementSeq -> Statement '.' . StatementSeq        (rule 7)
	StatementSeq -> Statement '.' .                     (rule 8)

	pref           reduce using rule 8
	base           reduce using rule 8
	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           reduce using rule 8
	str            shift, and enter state 16
	int            shift, and enter state 17
	%eof           reduce using rule 8

	StatementSeq   goto state 36
	Statement      goto state 6
	Type           goto state 7

State 27

	StatementSeq -> Statement ',' . OList '.'           (rule 10)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	OList          goto state 33
	Objs           goto state 34
	Type           goto state 35

State 28

	StatementSeq -> Statement ';' . PList '.'           (rule 9)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	PList          goto state 30
	Preds          goto state 31
	Type           goto state 32

State 29

	Component -> Directive '.' .                        (rule 4)

	pref           reduce using rule 4
	base           reduce using rule 4
	iri            reduce using rule 4
	neg            reduce using rule 4
	pos            reduce using rule 4
	true           reduce using rule 4
	false          reduce using rule 4
	name           reduce using rule 4
	str            reduce using rule 4
	int            reduce using rule 4
	%eof           reduce using rule 4


State 30

	StatementSeq -> Statement ';' PList . '.'           (rule 9)

	'.'            shift, and enter state 45


State 31

	PList -> Preds . ';' PList                          (rule 12)
	PList -> Preds .                                    (rule 13)

	'.'            reduce using rule 13
	';'            shift, and enter state 44


State 32

	Preds -> Type . Type                                (rule 16)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	Type           goto state 43

State 33

	StatementSeq -> Statement ',' OList . '.'           (rule 10)

	'.'            shift, and enter state 42


State 34

	OList -> Objs . ',' OList                           (rule 14)
	OList -> Objs .                                     (rule 15)

	'.'            reduce using rule 15
	','            shift, and enter state 41


State 35

	Objs -> Type .                                      (rule 17)

	'.'            reduce using rule 17
	','            reduce using rule 17


State 36

	StatementSeq -> Statement '.' StatementSeq .        (rule 7)

	pref           reduce using rule 7
	base           reduce using rule 7
	iri            reduce using rule 7
	neg            reduce using rule 7
	pos            reduce using rule 7
	true           reduce using rule 7
	false          reduce using rule 7
	name           reduce using rule 7
	str            reduce using rule 7
	int            reduce using rule 7
	%eof           reduce using rule 7


State 37

	Statement -> Type Type Type .                       (rule 11)

	'.'            reduce using rule 11
	','            reduce using rule 11
	';'            reduce using rule 11


State 38

	Directive -> pref name ':' . Type                   (rule 5)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	Type           goto state 40

State 39

	Type -> name ':' name .                             (rule 25)

	iri            reduce using rule 25
	'.'            reduce using rule 25
	','            reduce using rule 25
	';'            reduce using rule 25
	neg            reduce using rule 25
	pos            reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	name           reduce using rule 25
	str            reduce using rule 25
	int            reduce using rule 25


State 40

	Directive -> pref name ':' Type .                   (rule 5)

	'.'            reduce using rule 5


State 41

	OList -> Objs ',' . OList                           (rule 14)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	OList          goto state 47
	Objs           goto state 34
	Type           goto state 35

State 42

	StatementSeq -> Statement ',' OList '.' .           (rule 10)

	pref           reduce using rule 10
	base           reduce using rule 10
	iri            reduce using rule 10
	neg            reduce using rule 10
	pos            reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	name           reduce using rule 10
	str            reduce using rule 10
	int            reduce using rule 10
	%eof           reduce using rule 10


State 43

	Preds -> Type Type .                                (rule 16)

	'.'            reduce using rule 16
	';'            reduce using rule 16


State 44

	PList -> Preds ';' . PList                          (rule 12)

	iri            shift, and enter state 10
	neg            shift, and enter state 11
	pos            shift, and enter state 12
	true           shift, and enter state 13
	false          shift, and enter state 14
	name           shift, and enter state 15
	str            shift, and enter state 16
	int            shift, and enter state 17

	PList          goto state 46
	Preds          goto state 31
	Type           goto state 32

State 45

	StatementSeq -> Statement ';' PList '.' .           (rule 9)

	pref           reduce using rule 9
	base           reduce using rule 9
	iri            reduce using rule 9
	neg            reduce using rule 9
	pos            reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	name           reduce using rule 9
	str            reduce using rule 9
	int            reduce using rule 9
	%eof           reduce using rule 9


State 46

	PList -> Preds ';' PList .                          (rule 12)

	'.'            reduce using rule 12


State 47

	OList -> Objs ',' OList .                           (rule 14)

	'.'            reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 26
Number of terminals: 14
Number of non-terminals: 11
Number of states: 48
